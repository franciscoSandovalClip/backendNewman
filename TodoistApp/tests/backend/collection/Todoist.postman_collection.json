{
	"info": {
		"_postman_id": "82a29ec8-d0a9-440f-87ea-eab727b7941c",
		"name": "Todoist",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "TASKS Positive scenarios",
			"item": [
				{
					"name": "Get Tasks",
					"item": [
						{
							"name": "Get all existing tasks",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"pm.test(\"Content-Type header is application/json\", () => {",
											"  pm.expect(pm.response.headers.get('Content-Type')).to.eql('application/json');",
											"});",
											"",
											"//Schema validation",
											"const schema = {",
											"    \"type\": \"array\"",
											"};",
											"pm.test(\"Validate schema\", () => {",
											"    pm.response.to.have.jsonSchema(schema);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}",
									"host": [
										"{{baseURL}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Create Task",
					"item": [
						{
							"name": "Create a new Task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											"//Content validation",
											"var jsonData = pm.response.json();",
											"var content = pm.environment.get(\"taskName\")",
											"pm.test(\"Task name is correct\", function () {",
											"    pm.expect(jsonData.content).to.eql(content);",
											"});",
											"",
											"pm.environment.set(\"taskId\", jsonData.id);",
											"",
											"//Schema validation",
											"const schema = {",
											"    \"type\": \"object\"",
											"};",
											"pm.test(\"Validate schema\", () => {",
											"    pm.response.to.have.jsonSchema(schema);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"content\": \"{{taskName}}\", \"due_string\": \"today\", \"priority\": 2}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}",
									"host": [
										"{{baseURL}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get active Task",
					"item": [
						{
							"name": "Get an active task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Content validation",
											"var id = pm.environment.get(\"taskId\")",
											"pm.test(\"Task ID is correct\", function () {",
											"    var jsonData = pm.response.json();",
											"    pm.expect(jsonData.id).to.eql(id);",
											"});",
											"",
											"//===== Valid schema test",
											"const schema = {",
											"    \"type\": \"object\"",
											"};",
											"pm.test(\"Validate schema\", () => {",
											"    pm.response.to.have.jsonSchema(schema);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"protocolProfileBehavior": {
								"disableBodyPruning": true
							},
							"request": {
								"method": "GET",
								"header": [],
								"body": {
									"mode": "raw",
									"raw": ""
								},
								"url": {
									"raw": "{{baseURL}}/{{taskId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{taskId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Task",
					"item": [
						{
							"name": "Update a task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"content\": \"Buy Coffee\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/{{taskId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{taskId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Close Task",
					"item": [
						{
							"name": "Close an open task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/{{taskId}}/close",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{taskId}}",
										"close"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reopen Task",
					"item": [
						{
							"name": "Reopen closed task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/{{taskId}}/reopen",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{taskId}}",
										"reopen"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Task",
					"item": [
						{
							"name": "Delete an existing task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/{{taskId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{taskId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							"pm.test(\"Status code is 2xx\", function () {",
							"    pm.response.to.be.success;",
							"});"
						]
					}
				}
			]
		},
		{
			"name": "TASKS Negative scenarios",
			"item": [
				{
					"name": "Create Task",
					"item": [
						{
							"name": "Unable task creation past due date",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"// Task shouldn't be able to be created in the past",
											"pm.test(\"Status code is 4xx\", function () {",
											"    pm.response.to.be.unauthorized;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\n    \"content\": \"{{taskName}}\", \"due_string\": \"yesterday\", \"priority\": 3\n}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}",
									"host": [
										"{{baseURL}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Get active Task",
					"item": [
						{
							"name": "Get an invalid active task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Response when trying to retreive no existing task id",
											"pm.test(\"Status code is 404\", function () {",
											"    pm.response.to.have.status(404);",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "GET",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/{{invalidTaskId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{invalidTaskId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Update Task",
					"item": [
						{
							"name": "Update an invalid task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Response when trying to update no existing task id",
											"",
											"pm.test(\"Status code is 4xx\", function () {",
											"    pm.response.to.be.badRequest;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [
									{
										"key": "Content-Type",
										"value": "application/json",
										"type": "text"
									},
									{
										"key": "X-Requested-Id",
										"value": "$(uuidgen)",
										"type": "text"
									}
								],
								"body": {
									"mode": "raw",
									"raw": "{\"content\": \"Buy Coffee\"}",
									"options": {
										"raw": {
											"language": "json"
										}
									}
								},
								"url": {
									"raw": "{{baseURL}}/{{invalidTaskId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{invalidTaskId}}"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Close Task",
					"item": [
						{
							"name": "Close an invalid task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Response when trying to close no existing task id",
											"",
											"pm.test(\"Status code is 204\", function () {",
											"    pm.response.to.have.status(204);",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/{{invalidTaskId}}/close",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{invalidTaskId}}",
										"close"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Reopen Task",
					"item": [
						{
							"name": "Reopen invalid task",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Response when trying to reopen no existing task id",
											"",
											"pm.test(\"Status code is 4xx\", function () {",
											"    pm.response.to.be.badRequest;",
											"});",
											"",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "POST",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/{{invalidTaskId}}/reopen",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{invalidTaskId}}",
										"reopen"
									]
								}
							},
							"response": []
						}
					]
				},
				{
					"name": "Delete Task",
					"item": [
						{
							"name": "Delete an invalid task id",
							"event": [
								{
									"listen": "test",
									"script": {
										"exec": [
											"//Response when trying to delete no existing task id",
											"pm.test(\"Status code is 4xx\", function () {",
											"    pm.response.to.be.badRequest;",
											"});",
											""
										],
										"type": "text/javascript"
									}
								}
							],
							"request": {
								"method": "DELETE",
								"header": [],
								"url": {
									"raw": "{{baseURL}}/{{invalidTaskId}}",
									"host": [
										"{{baseURL}}"
									],
									"path": [
										"{{invalidTaskId}}"
									]
								}
							},
							"response": []
						}
					]
				}
			],
			"event": [
				{
					"listen": "prerequest",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				},
				{
					"listen": "test",
					"script": {
						"type": "text/javascript",
						"exec": [
							""
						]
					}
				}
			]
		}
	],
	"auth": {
		"type": "bearer",
		"bearer": [
			{
				"key": "token",
				"value": "{{token}}",
				"type": "string"
			}
		]
	},
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					"",
					"",
					"pm.test(\"Response time is less than 400ms\", function () {",
					"    pm.expect(pm.response.responseTime).to.be.below(400);",
					"});",
					""
				]
			}
		}
	]
}